
Option 1:
"I'm a full-stack web developer and B.Tech student with a strong passion for both backend and frontend development. Driven by a love for coding, I’m dedicated to creating seamless, user-friendly applications while continuously honing my skills through hard work and determination."

Option 2:
"As a full-stack web developer currently pursuing my B.Tech, I thrive on the challenges of both frontend and backend development. My passion for technology fuels my commitment to delivering high-quality solutions, and I believe in the power of hard work to turn ideas into reality."

Option 3:
"I’m a dedicated B.Tech student and full-stack web developer with a keen interest in both frontend and backend technologies. My passion for coding drives me to work hard and strive for excellence in every project, ensuring that I deliver impactful and user-centric web applications."






import { useState } from "react";
import { motion } from "framer-motion";
import { 
  Code2, 
  Database, 
  Server, 
  Palette, 
  Wrench, 
  BrainCircuit, 
  CheckCircle2,
  Cpu,
  GitBranch,
  Cloud
} from "lucide-react";

const Skills = () => {
  // Skill categories with icons and data
  const skillCategories = [
    {
      title: "Frontend",
      icon: Palette,
      color: "text-rose-500",
      bgColor: "bg-rose-500/10",
      skills: [
        { name: "HTML", level: 85 },
        { name: "CSS", level: 80 },
        { name: "JavaScript", level: 75 },
        { name: "React", level: 70 },
        { name: "Tailwind CSS", level: 65 },
        { name: "Next.js", level: 60 },
      ],
    },
    {
      title: "Backend",
      icon: Server,
      color: "text-blue-500",
      bgColor: "bg-blue-500/10",
      skills: [
        { name: "Node.js", level: 75 },
        { name: "Express", level: 70 },
        { name: "Python", level: 65 },
        { name: "Java", level: 60 },
        { name: "REST APIs", level: 75 },
      ],
    },
    {
      title: "Databases",
      icon: Database,
      color: "text-emerald-500",
      bgColor: "bg-emerald-500/10",
      skills: [
        { name: "MongoDB", level: 70 },
        { name: "MySQL", level: 65 },
        { name: "PostgreSQL", level: 60 },
        { name: "Firebase", level: 55 },
      ],
    },
    {
      title: "DevOps",
      icon: Cloud,
      color: "text-purple-500",
      bgColor: "bg-purple-500/10",
      skills: [
        { name: "Docker", level: 60 },
        { name: "Git", level: 75 },
        { name: "CI/CD", level: 55 },
        { name: "AWS", level: 50 },
      ],
    },
    {
      title: "Languages",
      icon: Code2,
      color: "text-amber-500",
      bgColor: "bg-amber-500/10",
      skills: [
        { name: "JavaScript", level: 75 },
        { name: "Python", level: 70 },
        { name: "Java", level: 65 },
        { name: "C/C++", level: 60 },
      ],
    },
    {
      title: "AI/ML",
      icon: BrainCircuit,
      color: "text-indigo-500",
      bgColor: "bg-indigo-500/10",
      skills: [
        { name: "TensorFlow", level: 50 },
        { name: "Pandas", level: 65 },
        { name: "NumPy", level: 60 },
        { name: "Data Analysis", level: 55 },
      ],
    },
  ];

  const [activeCategory, setActiveCategory] = useState(0);

  return (
    <section className="relative py-24 overflow-hidden">
  {/* Modern gradient background */}
  <div className="absolute inset-0 bg-gradient-to-br from-blue-50/40 via-white to-indigo-50/40 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900"></div>
  
  {/* Animated background elements */}
  <motion.div 
    initial={{ opacity: 0 }}
    animate={{ opacity: 1 }}
    transition={{ duration: 1 }}
    className="absolute inset-0 overflow-hidden pointer-events-none"
  >
    {/* Floating gradient blobs */}
    <motion.div
      initial={{ x: -100, y: -100 }}
      animate={{ x: [0, 50, 0], y: [0, 30, 0] }}
      transition={{ duration: 15, repeat: Infinity, ease: "easeInOut" }}
      className="absolute top-1/4 left-1/4 w-96 h-96 bg-blue-300 rounded-full mix-blend-multiply filter blur-[100px] opacity-20 dark:opacity-10"
    ></motion.div>
    <motion.div
      initial={{ x: 100, y: 100 }}
      animate={{ x: [0, -50, 0], y: [0, -30, 0] }}
      transition={{ duration: 18, repeat: Infinity, ease: "easeInOut", delay: 2 }}
      className="absolute bottom-1/4 right-1/4 w-96 h-96 bg-indigo-300 rounded-full mix-blend-multiply filter blur-[100px] opacity-20 dark:opacity-10"
    ></motion.div>
    <motion.div
      initial={{ x: 0, y: 0 }}
      animate={{ x: [0, 40, 0], y: [0, -40, 0] }}
      transition={{ duration: 20, repeat: Infinity, ease: "easeInOut", delay: 4 }}
      className="absolute top-1/3 right-1/3 w-64 h-64 bg-purple-300 rounded-full mix-blend-multiply filter blur-[80px] opacity-15 dark:opacity-10"
    ></motion.div>
    
    {/* Grid pattern overlay */}
    <div className="absolute inset-0 bg-[linear-gradient(to_right,#80808008_1px,transparent_1px),linear-gradient(to_bottom,#80808008_1px,transparent_1px)] bg-[size:40px_40px] dark:opacity-10"></div>
  </motion.div>

  <div className="container relative mx-auto px-4 sm:px-6 lg:px-8">
    {/* Section header */}
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ duration: 0.5 }}
      className="text-center mb-16"
    >
      <motion.div
        whileHover={{ scale: 1.05 }}
        className="inline-block px-4 py-1.5 text-sm font-medium rounded-full bg-gradient-to-r from-blue-100 to-blue-50 dark:from-blue-900/40 dark:to-blue-800/30 text-blue-600 dark:text-blue-400 mb-4 shadow-sm"
      >
        Skills & Expertise
      </motion.div>
      <h2 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
        My <span className="text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-indigo-600 dark:from-blue-400 dark:to-indigo-500">Technical Stack</span>
      </h2>
      <p className="max-w-2xl mx-auto text-lg text-gray-600 dark:text-gray-300">
        Technologies I've worked with and my proficiency level in each
      </p>
    </motion.div>

    {/* Category selector */}
    <motion.div 
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ delay: 0.2 }}
      className="flex flex-wrap justify-center gap-3 mb-12"
    >
      {skillCategories.map((category, index) => (
        <motion.button
          key={index}
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={() => setActiveCategory(index)}
          initial={{ opacity: 0, y: 10 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.3 + index * 0.1 }}
          className={`px-5 py-2.5 rounded-full flex items-center text-sm font-medium transition-all ${
            activeCategory === index
              ? `${category.bgColor} ${category.color} shadow-md`
              : "bg-gray-100 text-gray-600 dark:bg-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"
          }`}
        >
          <category.icon className="w-4 h-4 mr-2" />
          {category.title}
        </motion.button>
      ))}
    </motion.div>

    {/* Skills grid */}
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {skillCategories[activeCategory].skills.map((skill, index) => (
        <motion.div
          key={index}
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.3, delay: index * 0.05 }}
          whileHover={{ y: -5 }}
          className="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-100 dark:border-gray-700 overflow-hidden transition-all hover:shadow-md hover:border-transparent"
        >
          <div className="p-6">
            <div className="flex justify-between items-center mb-4">
              <h3 className="font-semibold text-gray-800 dark:text-gray-200">
                {skill.name}
              </h3>
              <span className="text-xs font-medium px-2.5 py-1 rounded-full bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">
                {skill.level}%
              </span>
            </div>
            <div className="w-full bg-gray-200 dark:bg-gray-700 h-2 rounded-full overflow-hidden">
              <motion.div
                initial={{ width: 0 }}
                animate={{ width: `${skill.level}%` }}
                transition={{ duration: 1, delay: index * 0.1 }}
                className={`h-full ${
                  activeCategory === 0
                    ? "bg-gradient-to-r from-rose-500 to-pink-500"
                    : activeCategory === 1
                    ? "bg-gradient-to-r from-blue-500 to-cyan-500"
                    : activeCategory === 2
                    ? "bg-gradient-to-r from-emerald-500 to-teal-500"
                    : activeCategory === 3
                    ? "bg-gradient-to-r from-purple-500 to-violet-500"
                    : activeCategory === 4
                    ? "bg-gradient-to-r from-amber-500 to-yellow-500"
                    : "bg-gradient-to-r from-indigo-500 to-blue-500"
                }`}
              />
            </div>
          </div>
        </motion.div>
      ))}
    </div>

    {/* Tech stack visualization */}
    <motion.div 
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: 0.5 }}
      className="mt-20 bg-gradient-to-r from-blue-500 to-indigo-600 dark:from-blue-600 dark:to-indigo-700 rounded-2xl p-8 text-white overflow-hidden relative"
    >
      {/* Floating elements inside the card */}
      <div className="absolute top-0 left-0 w-32 h-32 bg-white/10 rounded-full filter blur-[80px]"></div>
      <div className="absolute bottom-0 right-0 w-40 h-40 bg-indigo-400/20 rounded-full filter blur-[100px]"></div>
      
      <div className="relative max-w-4xl mx-auto">
        <motion.div 
          whileHover={{ scale: 1.05 }}
          className="flex items-center mb-6"
        >
          <Cpu className="w-8 h-8 mr-3" />
          <h3 className="text-2xl font-bold">Tech Stack Visualization</h3>
        </motion.div>
        <p className="mb-6 text-blue-100">
          Here's how my skills interact to create full-stack solutions:
        </p>
        <div className="grid grid-cols-3 md:grid-cols-5 gap-4">
          {skillCategories.map((category, index) => (
            <motion.div 
              key={index}
              whileHover={{ y: -5 }}
              className="text-center"
            >
              <motion.div 
                whileHover={{ rotate: 15, scale: 1.1 }}
                className={`p-3 rounded-lg ${category.bgColor} inline-flex mb-2`}
              >
                <category.icon className={`w-6 h-6 ${category.color}`} />
              </motion.div>
              <h4 className="font-medium text-blue-50">{category.title}</h4>
            </motion.div>
          ))}
        </div>
      </div>
    </motion.div>
  </div>
</section>
  );
};

export default Skills;